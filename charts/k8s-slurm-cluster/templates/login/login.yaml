{{- if .Values.login.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: slurm
    app.kubernetes.io/component: login
  name: {{ .Values.login.name }}
spec:
  replicas: {{ .Values.login.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: slurm
      app.kubernetes.io/component: login
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      {{- if eq .Values.network.rdma "true" }}
      {{- if .Values.network.ipoibnetworks }}
      annotations:
        {{- range $.Values.network.ipoibnetworks }}
        k8s.v1.cni.cncf.io/networks: {{ . }}
        {{- end }}
      {{- end }}
      {{- end }}
      labels:
        app.kubernetes.io/name: slurm
        app.kubernetes.io/component: login
    spec:
      {{- with .Values.login.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.login.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
      {{- end }}
      {{- with .Values.login.nodeAffinity }}
      affinity:
{{ toYaml . | indent 8 }}
      {{- end }}
      initContainers:
      {{- if eq .Values.auth.krb5.enabled "true" }}
      - name: ad-join-init-container
        image: ubiquitycluster/slurm-adcli:latest
        command: ["/bin/sh", "-c"]
        args:
        - |
          echo "Reading SSSD credentials from secret..."
          domain=$(cat /etc/sssd-creds/domain)
          username=$(cat /etc/sssd-creds/username)
          password=$(cat /etc/sssd-creds/password)
          echo $username
          echo $password
          echo $domain
          echo $password | adcli -v join --domain-ou=OU=HPC_Devices,OU=Servers,DC=campus,DC=unn,DC=ac,DC=uk $domain --login-user=$username --stdin-password --fqdn=$pod_name && mv /etc/krb5.keytab /keytab/keytab
        volumeMounts:
        - name: keytab-volume
          mountPath: /keytab
        - name: sssd-creds
          mountPath: /etc/sssd-creds
        - name: ubiq-sssd
          mountPath: /var/lib/sss
      {{- end }}
      - name: init-sssd-dir
        image: busybox
        command: ["/bin/sh", "-c"]
        args:
        - |
          mkdir -p /var/lib/sss/db /var/lib/sss/mc /var/lib/sss/gpo_cache;
          chmod 700 /var/lib/sss/db /var/lib/sss/mc /var/lib/sss/gpo_cache;
          mkdir -p /var/lib/sss/pipes/private;
          chmod 1755 /var/lib/sss/pipes/private;
          mkdir -p /var/lib/sss/pubconf
          chmod 755 /var/lib/sss/pubconf
        volumeMounts:
          - name: ubiq-sssd
            mountPath: /var/lib/sss
      containers:
        - name: login
          image: "{{ .Values.login.image }}"
          imagePullPolicy: "{{ .Values.login.imagePullPolicy }}"
          env:
            - name: ROCKY_MOTD
              value: {{ .Values.motd.message }}
          ports:
            - containerPort: 22
            - containerPort: 80
            - containerPort: 443
          {{- if eq .Values.network.rdma "true" }}
          resources:
            requests:
{{ toYaml .Values.login.resources.requests | indent 14 }}
              rdma/rdma_shared_device_a: 1
            limits:
{{ toYaml .Values.login.resources.limits | indent 14 }}
              rdma/rdma_shared_device_a: 1
          securityContext:
            capabilities:
              add:
              - IPC_LOCK
          {{- else }}
          resources:
{{ toYaml .Values.login.metrics.resources | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: slurm-jobdir
              mountPath: {{ .Values.storage.mountPath }}
            - name: slurm-config-volume
              mountPath: /etc/slurm/slurm.conf
              subPath: slurm.conf
            - name: munge-key-secret
              mountPath: /tmp/munge.key
              subPath: munge.key
            - name: {{ .Values.configmaps.sshdConfig }}
              mountPath: /etc/ssh/sshd_config
              subPath: sshd_config
            - name: authorized-keys
              mountPath: /tmp/authorized_keys
              subPath: authorized_keys
            {{- if eq .Values.pam.enabled "true" }}
            # PAM configuration files
            - name: pam-config-configmap
              mountPath: /etc/pam.d/common-auth
              subPath: common-auth
            - name: pam-config-configmap
              mountPath: /etc/pam.d/common-password
              subPath: common-password
            - name: pam-config-configmap
              mountPath: /etc/pam.d/common-session
              subPath: common-session
            - name: pam-config-configmap
              mountPath: /etc/pam.d/common-account
              subPath: common-account
            - name: pam-config-configmap
              mountPath: /etc/pam.d/login
              subPath: login
            - name: pam-config-configmap
              mountPath: /etc/pam.d/runuser
              subPath: runuser
            - name: pam-config-configmap
              mountPath: /etc/pam.d/su
              subPath: su
            - name: pam-config-configmap
              mountPath: /etc/pam.d/sshd
              subPath: sshd
            {{- end }}
            - name:  {{ .Values.configmaps.sssdConfig }}
              mountPath: /etc/sssd/sssd.conf
              subPath: sssd.conf
            {{- if eq .Values.auth.krb5.enabled "true" }}
            - name:  {{ .Values.configmaps.krb5Config }}
              mountPath: /etc/krb5.conf
              subPath: krb5.conf
            - name: keytab-volume
              mountPath: /etc/krb5.keytab
              subPath: keytab
            - name: ubiq-sssd
              mountPath: /var/lib/sss
            {{- end }}
            {{- if .Values.login.volumeMounts }}
{{ toYaml .Values.login.volumeMounts | indent 12 }}
        {{- end }}
      hostname: login
      dnsConfig:
        searches:
          - slurmd.hpc-ubiq.svc.cluster.local
      restartPolicy: Always
      volumes:
        {{- if eq .Values.auth.krb5.enabled "true" }}
        - name: sssd-creds
          secret:
            secretName: sssd-creds
        - name: {{ .Values.configmaps.krb5Config }}
          configMap:
            name: {{ .Values.configmaps.krb5Config }}
        {{- end }}
        {{- if eq .Values.pam.enabled "true" }}
        # PAM configuration volumes
        - name: pam-config-configmap
          configMap:
            name: pam-config-configmap
        {{- end }}
        - name: slurm-jobdir
          persistentVolumeClaim:
            claimName: {{ .Values.storage.claimName }}
        - name: slurm-config-volume
          configMap:
            name: {{ .Values.configmaps.slurmConf }}
        - name: sshd-config-configmap
          configMap:
            name: {{ .Values.configmaps.sshdConfig }}
        - name: munge-key-secret
          secret:
            secretName: {{ .Values.secrets.mungeKey }}
            defaultMode: 0400
        - name: authorized-keys
          configMap:
            {{- if .Values.sshPublicKey }}
            name: helm-authorized-keys-configmap
            {{- else }}
            name: authorized-keys-configmap
            {{- end }}
        - name: cluster-config
          configMap:
            name: cluster-config
        - name: {{ .Values.configmaps.sssdConfig }}
          configMap:
            name: {{ .Values.configmaps.sssdConfig }}
            defaultMode: 0600
        - name: keytab-volume
          emptydir: {}
        {{- if .Values.login.volumes }}
{{ toYaml .Values.login.volumes | indent 8 }}
        {{- end }}
{{- end }}
